buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.4.RELEASE")
        classpath("org.springframework:spring-test:4.3.6.RELEASE")
        classpath("org.springframework.data:spring-data-rest-webmvc:2.6.0.RELEASE")

    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"

jar {
    baseName = 'SpringProject'
    version =  '0.1.0'
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}



repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework:spring-test")

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final"){
        exclude module: 'hibernate-jpa-2.0-api' //by artifact name
    }
    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    testCompile "org.mockito:mockito-core:2.+"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile("junit:junit:4.12")
}
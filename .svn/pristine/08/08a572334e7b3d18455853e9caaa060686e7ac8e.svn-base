package hello.models;

import groovy.transform.ToString;

import javax.persistence.*;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.*;
import org.springframework.security.crypto.password.PasswordEncoder;

import java.io.Serializable;

@Entity(name = "User")
@Table(name = "user")
@ToString(excludes = "password")
public class User implements Serializable{

//    private final static PasswordEncoder passwordEncoder = new BCryptPasswordEncoder();

    @Id
    @Column(name = "username", nullable = false, unique = true)
    private String username;

    @Column(name = "password", nullable = false)
    private String password;

    @Column(name = "authenticated")
    private boolean authenticated;

    @Column(name = "session_token")
    private String token;

    @ManyToOne
    private Role role;

    public User(){

    }

    public User(String username, String token, boolean authenticated){
        this.username = username;
        this.token = token;
        this.authenticated = authenticated;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Role getRole() {
        return role;
    }

    public void setRole(Role role) {
        this.role = role;
    }

    public boolean isAuthenticated(){
        return this.authenticated;
    }

    public void setAuthenticated(boolean authenticated){
        this.authenticated = authenticated;
    }

    public String getToken() {
        return token;
    }

    public void setToken(String token) {
        this.token = token;
    }
}